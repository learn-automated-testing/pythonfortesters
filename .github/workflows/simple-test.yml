name: Simple Test Runner

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest selenium webdriver-manager allure-pytest
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Test Chrome setup
      run: |
        python3 test_simple.py
      continue-on-error: true
        
    - name: Run WebElements tests
      run: |
        cd practiceautomatedtesting/webelements
        CHROME_HEADLESS=true CHROME_USER_DATA_DIR=/tmp/chrome-$(date +%s) pytest --alluredir=../../allure-results/webelements -v
      continue-on-error: true
      
    - name: Run Shopping tests
      run: |
        cd practiceautomatedtesting/shopping
        CHROME_HEADLESS=true CHROME_USER_DATA_DIR=/tmp/chrome-$(date +%s) pytest --alluredir=../../allure-results/shopping -v
      continue-on-error: true
      
    - name: Run API tests
      run: |
        cd practiceautomatedtesting/api
        pytest --alluredir=../../allure-results/api -v
      continue-on-error: true
      
    - name: Check test results
      run: |
        echo "Checking if allure-results directory exists..."
        if [ -d "allure-results" ]; then
          echo "✅ allure-results directory found"
          ls -la allure-results/
        else
          echo "❌ allure-results directory not found"
          mkdir -p allure-results
          echo "Created empty allure-results directory"
        fi
      
    - name: Install Allure
      run: |
        wget -qO- https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.0/allure-commandline-2.24.0.tgz | tar -xz -C /opt/
        ln -s /opt/allure-2.24.0/bin/allure /usr/local/bin/allure
        
    - name: Generate Allure Report
      run: |
        if [ -d "allure-results" ] && [ "$(ls -A allure-results)" ]; then
          allure generate allure-results --clean -o allure-report
          echo "✅ Allure report generated successfully"
        else
          echo "⚠️ No test results found, creating empty report"
          mkdir -p allure-report
          echo "<html><body><h1>No test results available</h1><p>Tests may have failed before generating results.</p></body></html>" > allure-report/index.html
        fi
        
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30
        if-no-files-found: warn
        
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: allure-results/
        retention-days: 30
        if-no-files-found: warn
        
    - name: Create Test Summary
      run: |
        echo "## Test Execution Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "**Execution Time:** $(date)" >> test-summary.md
        echo "" >> test-summary.md
        
        if [ -d "allure-results/webelements" ]; then
          echo "✅ WebElements tests executed" >> test-summary.md
        else
          echo "❌ WebElements tests failed or not executed" >> test-summary.md
        fi
        
        if [ -d "allure-results/shopping" ]; then
          echo "✅ Shopping tests executed" >> test-summary.md
        else
          echo "❌ Shopping tests failed or not executed" >> test-summary.md
        fi
        
        if [ -d "allure-results/api" ]; then
          echo "✅ API tests executed" >> test-summary.md
        else
          echo "❌ API tests failed or not executed" >> test-summary.md
        fi
        
        echo "" >> test-summary.md
        echo "**Allure Report:** Available as artifact: allure-report" >> test-summary.md
        echo "**Test Results:** Available as artifact: test-results" >> test-summary.md
        
    - name: Upload Test Summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md
        retention-days: 30
        if-no-files-found: warn 