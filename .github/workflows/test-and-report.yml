name: Run Tests and Generate Reports

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip curl xvfb
        
    - name: Install Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install Allure commandline
      run: |
        wget -qO- https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.0/allure-commandline-2.24.0.tgz | tar -xz -C /opt/
        ln -s /opt/allure-2.24.0/bin/allure /usr/local/bin/allure
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest allure-pytest pytest-html requests python-dotenv selenium webdriver-manager
        
    - name: Create combined requirements.txt
      run: |
        cat practiceautomatedtesting/shopping/requirements.txt > combined_requirements.txt
        echo "" >> combined_requirements.txt
        cat practiceautomatedtesting/api/requirements.txt >> combined_requirements.txt
        # Remove duplicates
        sort combined_requirements.txt | uniq > temp_requirements.txt
        mv temp_requirements.txt combined_requirements.txt
        
    - name: Install project dependencies
      run: |
        pip install -r combined_requirements.txt
        
    - name: Set up environment variables
      run: |
        echo "CHROME_HEADLESS=true" >> $GITHUB_ENV
        echo "DISPLAY=:99" >> $GITHUB_ENV
        echo "TIMESTAMP=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_ENV
        
    - name: Start virtual display
      run: |
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Clean previous results
      run: |
        rm -rf allure-results allure-report
        
    - name: Run WebElements tests
      run: |
        cd practiceautomatedtesting/webelements
        pytest --alluredir=../../allure-results/webelements -v -n 4
      continue-on-error: true
      env:
        CHROME_HEADLESS: true
        DISPLAY: :99
        
    - name: Run Shopping tests
      run: |
        cd practiceautomatedtesting/shopping
        pytest --alluredir=../../allure-results/shopping -v -n 4
      continue-on-error: true
      env:
        CHROME_HEADLESS: true
        DISPLAY: :99
        
    - name: Run API tests
      run: |
        cd practiceautomatedtesting/api
        pytest --alluredir=../../allure-results/api -v -n 4
      continue-on-error: true
        
    - name: Generate Allure Report
      run: |
        allure generate allure-results --clean -o allure-report
        
    - name: Upload Allure Report as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-${{ env.TIMESTAMP }}
        path: allure-report/
        retention-days: 30
        if-no-files-found: error
        
    - name: Upload Allure Report for Pages Deployment
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-pages
        path: allure-report/
        retention-days: 30
        if-no-files-found: error
        
    - name: Upload Test Results as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ env.TIMESTAMP }}
        path: allure-results/
        retention-days: 30
        if-no-files-found: warn
        
    - name: Generate Test Summary
      run: |
        echo "## Test Results Summary" >> test-summary.md
        echo "" >> test-summary.md
        echo "**Allure Report:** Available as artifact: allure-report-${{ env.TIMESTAMP }}" >> test-summary.md
        echo "**GitHub Pages:** Will be deployed automatically after successful run" >> test-summary.md
        echo "**Test Results:** Available as artifact: test-results-${{ env.TIMESTAMP }}" >> test-summary.md
        echo "" >> test-summary.md
        
        # Count test files and results
        echo "### WebElements Tests" >> test-summary.md
        if [ -d "allure-results/webelements" ]; then
          echo "- Test results available in allure-results/webelements" >> test-summary.md
        else
          echo "- No test results found" >> test-summary.md
        fi
        
        echo "### Shopping Tests" >> test-summary.md
        if [ -d "allure-results/shopping" ]; then
          echo "- Test results available in allure-results/shopping" >> test-summary.md
        else
          echo "- No test results found" >> test-summary.md
        fi
        
        echo "### API Tests" >> test-summary.md
        if [ -d "allure-results/api" ]; then
          echo "- Test results available in allure-results/api" >> test-summary.md
        else
          echo "- No test results found" >> test-summary.md
        fi
        
    - name: Upload Test Summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary-${{ env.TIMESTAMP }}
        path: test-summary.md
        retention-days: 30
        
    - name: Comment PR with Test Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          let summary = '';
          try {
            summary = fs.readFileSync('test-summary.md', 'utf8');
          } catch (error) {
            summary = '## Test Results Summary\n\nTest execution completed. Check artifacts for detailed results.';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });
          
  deploy:
    needs: test-and-report
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download Allure Report
      uses: actions/download-artifact@v4
      with:
        name: allure-report-pages
        path: allure-report/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: allure-report/
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 